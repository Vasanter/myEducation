"""МЕТОДЫ И ФУНКЦИИ СТРОК"""
string = 'без труда не выловишь и рыбку из Пруда! '

# print(dir(string))  # dir используется для получения списка атрибутов и методов объекта
# print(len(string))  # возвращает количество символов в строке
# print(string.count('руд'))  # способ подсчитывать количество вхождений заданной подстроки в строке
# print(string.isalpha())  # возвращает True, если строка состоит только из алфавитных символов
# print(string.islower())  # возвращает True, если строка состоит только из символов в нижнем регистре
# print(string.isupper())  # возвращает True, если все символы строки в верхнем регистре
# print(string.isdigit())  # возвращает True, если строка состоит только из цифровых символов
# print(string.isnumeric())  # возвращает True, если строка представляет собой целое число
# print(string.startswith("без тру"))  # возвращает True, если строка начинается с подстроки "без тру"
# print(string.endswith("уда! "))  # возвращает True, если строка заканчивается на подстроку "уда! "
# print(string.lower())  # переводит строку в нижний регистр
# print(string.upper())  # переводит строку в верхний регистр
# print(string.title())  # перевод в верхний регистр первого символа каждого слова строки
# print(string.capitalize())  # преобразовывает первый символ строки в верхний регистр, остальные символы - в нижний
# print(string.strip())  # удаляет начальные и конечные пробелы из строки
# print(string.rjust(55))  # возвращает копию строки соответствующего типа, выравненную по правому краю указанной длины
# print(string.split())  # разделяет строку на список подстрок по разделителю
# print(string.find('и'))  # возвращает индекс первого вхождения подстроки (или -1, если не найдено).
# print(string.rfind('и'))  # используется для поиска подстроки в обратном порядке
# print(" - - ".join(['Ты', 'кто', 'такой?']))  # объединяет подстроки в строку
# print(string.replace('выловишь', 'вытянешь'))  # замена подстроки в строке


'''ОПЕРАТОР IN'''
# Оператор in в Python проверяет принадлежность элемента последовательности (строке, списку, кортежу, множеству, словарю
# и другим итерируемым объектам)

# my_string = "Hello, world!"
# print("mad" in my_string)  # False

# my_list = [1, 2, 3, 4]
# print(3 in my_list)  # True
