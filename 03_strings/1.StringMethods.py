"""МЕТОДЫ И ФУНКЦИИ СТРОК"""
_str = 'без труда не выловишь и рыбку из Пруда! '

# print(dir(_str))  # dir используется для получения списка атрибутов и методов объекта
# print(len(_str))  # возвращает количество символов в строке
# print(_str.count('руд'))  # способ подсчитывать количество вхождений заданной подстроки в строке
# print(_str.isalpha())  # вернёт True, если строка не пуста и все её символы — буквы (без пробелов, цифр, спец. сим-ов)
# print(_str.islower())  # вернёт True, если строка состоит только из символов в нижнем регистре
# print(_str.isupper())  # вернёт True, если все символы строки в верхнем регистре
# print(_str.isdigit())  # вернёт True, если строка состоит только из цифровых символов
# print(_str.isnumeric())  # вернёт True, если строка представляет собой целое число
# print(_str.startswith("без тру"))  # вернёт True, если строка начинается с подстроки "без тру"
# print(_str.endswith("уда! "))  # вернёт True, если строка заканчивается на подстроку "уда! "
# print(_str.lower())  # переведёт строку в нижний регистр
# print(_str.upper())  # переведёт строку в верхний регистр
# print(_str.title())  # перевод в верхний регистр первого символа каждого слова строки
# print(_str.capitalize())  # преобразовывает первый символ строки в верхний регистр, остальные символы - в нижний
# print(_str.strip())  # удаляет начальные и конечные пробелы из строки
# print(_str.rjust(55))  # вернёт копию строки соответствующего типа, выравненную по правому краю указанной длины
# print(_str.split())  # разделяет строку на список подстрок по разделителю
# print(_str.find('и'))  # вернёт индекс первого вхождения подстроки (или -1, если не найдено).
# print(_str.rfind('и'))  # используется для поиска подстроки в обратном порядке
# print(" - - ".join(['Ты', 'кто', 'такой?']))  # объединяет подстроки в строку
# print(_str.replace('выловишь', 'вытянешь'))  # замена подстроки в строке
