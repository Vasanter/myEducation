"""ВЫВОД ЗНАЧЕНИЙ ПЕРЕМЕННЫХ"""
# Функция print выводит все элементы, разделяя их значением sep и завершает вывод значением end.

print("Привет, мир!")  # Привет, мир!
print(1, 2, 3, sep='-')  # 1-2-3 | sep — это строка-разделитель между объектами. По умолчанию это один пробел.
print("Конец строки", end='!')  # Конец строки! | end — строка, добавляемая после последнего объекта.


# name = 'John'
# age = 25
#
# print('Меня зовут', name)  # Меня зовут John
# print('Мне', age, 'лет')  # Мне 25 лет
# print(f'Меня зовут {name} и мне {age} лет!')  # Меня зовут John и мне 25 лет!


"""УПРАВЛЯЮЩИЕ ПОСЛЕДОВАТЕЛЬНОСТИ"""
# Это специальные комбинации символов, которые начинаются с обратной косой черты (\) и интерпретируются интерпретатором
# Python не как обычные символы, а как команды для вставки специальных символов или изменения поведения строки.

# \\ - обратная косая черта (\)
# \' - одинарная кавычка (')
# \" - двойная кавычка (")
# \n - перевод строки (новая строка)
# \t - горизонтальная табуляция (таб)
# \r - возврат каретки
# \b - возврат на один символ назад (backspace)
# \f - перевод страницы (form feed)
# \v - вертикальная табуляция
# \a - звуковой сигнал (bell)


# print('Еще ', 'один', 'пример', sep=' ~ ', end='  =>\t!!!')  # Еще  ~ один ~ пример  =>	!!!
# print("Что", 'будем', "делать?", sep="\n")
# print("Написал: '\tПривет, мир!'")  # Написал: '	Привет, мир!'
# print('Другой пример ', '\nпо', 'переносу строк!', sep='\n\t')


"""Многострочный 
комментарий 
или docstring"""


"""ЭКРАНИРОВАНИЕ"""
# В Python символы в строках могут быть экранированы с помощью обратного слэша (\).
# Это позволяет вставлять специальные символы, такие как новая строка (\n), табуляция (\t), или сам обратный слэш (\\).

# print('I\'m a junior')  # I'm a junior

# print("Написал: \"Привет, мир!\"") # Написал: "Привет, мир!"
